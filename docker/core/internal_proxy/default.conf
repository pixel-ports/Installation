server {
        listen [::]:${NGINX_PORT};
        listen      ${NGINX_PORT};
        server_name *.${PIXEL_DOMAIN};

        # Redirect all non-https requests
        rewrite ^ https://$host$request_uri? permanent;
}

# Certificate(s) and private key
ssl_certificate /etc/ssl/fullchain.pem;
ssl_certificate_key /etc/ssl/privkey.pem;
ssl_dhparam /etc/ssl/certs/dhparam.pem;
ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1;
ssl_prefer_server_ciphers on;
ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

ssl_session_cache shared:TLS:2m;
ssl_buffer_size 4k;

  
server {
        listen [::]:${NGINX_TLS_PORT} ssl;
        listen      ${NGINX_TLS_PORT} ssl;

        server_name ih.${PIXEL_DOMAIN};
        location /extractor/ {
            proxy_pass http://${IH_DATA_EXTRACTOR_HOST}:8080/archivingSystem/extractor/;
            include /etc/nginx/conf.d/cors.include;
        }

        location /proxy/ {
            proxy_pass http://${IH_ELASTICSEARCH_PROXY_HOST}:80/;
            include /etc/nginx/conf.d/cors.include;
        }
}

server {
        listen [::]:${NGINX_TLS_PORT} ssl;
        listen      ${NGINX_TLS_PORT} ssl;

        server_name id.${PIXEL_DOMAIN};
        location / {
                proxy_pass http://${SEC_KEYROCK_HOST}:3000;
                proxy_redirect     off;
                proxy_set_header   Host $host;
        }
}

server {
        listen [::]:${NGINX_TLS_PORT} ssl;
        listen      ${NGINX_TLS_PORT} ssl;

        server_name xamcl.${PIXEL_DOMAIN};
        location / {
                proxy_pass http://${SEC_AUTHZFORCE_HOST}:3080;
                proxy_redirect     off;
                proxy_set_header   Host $host;
        }
}

server {
        listen [::]:${NGINX_TLS_PORT} ssl;
        listen      ${NGINX_TLS_PORT} ssl;

        server_name data.${PIXEL_DOMAIN};
        location / {
                proxy_pass http://${IH_DATA_EXTRACTOR_HOST}:8080;
                proxy_redirect     off;
                proxy_set_header   Host $host;
        }
}

server {
        listen [::]:${NGINX_TLS_PORT} ssl;
        listen      ${NGINX_TLS_PORT} ssl;

        server_name elastic.${PIXEL_DOMAIN};
        location / {
                proxy_pass http://${IH_ELASTICSEARCH_PROXY_HOST}:80;
                proxy_redirect     off;
                proxy_set_header   Host $host;
        }
}


server {
        listen [::]:${NGINX_TLS_PORT} ssl;
        listen      ${NGINX_TLS_PORT} ssl;

        server_name orchestrator.${PIXEL_DOMAIN};
        location / {
                proxy_pass http://${DAL_ORCHESTRATOR_HOST}:8080;
                proxy_redirect     off;
                proxy_set_header   Host $host;
        }
}